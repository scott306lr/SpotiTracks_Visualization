import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import { useQuery } from "@tanstack/react-query";
import { useState } from "react";

import { getSpotifyDataFn } from "../utils/dataHandler";

import MyCombobox from "../components/MyCombobox";
// import type { Collection } from "../components/SpotifyRadar";
import SpotifyRadar from "../components/SpotifyRadar";
import type { SpotifyData } from "../utils/dataHandler";
import Modal from "../components/Modal";

// TODO: User can select basic types to compare, or make custom settings
// TODO: Custom settings: search artists, songs, albumns, genres, etc.
// TODO: A disclosure showing the data for the selected song (compared data)
// TODO: Think of a way to show the data in a more interesting way

const Part1: React.FC = () => {
  const { data: rawData, isLoading } = useQuery(
    ["hw3"],
    getSpotifyDataFn("http://vis.lab.djosix.com:2020/data/spotify_tracks.csv")
  );
  const [selected, setSelected] = useState<SpotifyData[]>([]);
  const [modalOpen, setModalOpen] = useState(false);
  // const [collections, setCollections] = useState<Collection[]>([]);

  const avg = rawData != null ? rawData : [];
  const popular5 =
    rawData != null ? rawData.filter((d) => d.popularity > 95) : [];
  const popular50 =
    rawData != null ? rawData.filter((d) => d.popularity > 50) : [];

  const myCollections = [
    {
      name: "Average of All Songs",
      data: avg,
    },
    {
      name: "Popular 5",
      data: popular5,
    },
    {
      name: "Popular 50",
      data: popular50,
    },
  ];

  return (
    <div className="flex w-full items-center py-2">
      {/* <h1 className="w-full text-3xl">Spotify Dataset</h1> */}
      <div className="flex w-1/2 flex-col items-center justify-center py-2">
        <SpotifyRadar input={myCollections} />
      </div>
      <div className="flex w-1/2 flex-col items-center justify-center py-2">
        <button onClick={() => setModalOpen(true)}>Open Modal</button>
        <Modal isOpen={modalOpen} setIsOpen={setModalOpen} title={"Add"}>
          {isLoading || rawData == null ? (
            <p>Loading...</p>
          ) : (
            <>
              <div className="flex w-64 flex-col items-center justify-center">
                <MyCombobox
                  data={rawData}
                  selected={selected}
                  setSelected={setSelected}
                />
                <p>
                  Lorem ipsum dolor sit amet consectetur adipisicing elit.
                  Doloribus eveniet omnis repellat nemo eum hic temporibus
                  voluptatibus deleniti accusantium! Soluta, atque error fuga
                  laborum tempore explicabo nobis delectus? Voluptates, dolores.
                </p>
              </div>
            </>
          )}
        </Modal>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  return (
    <div className="flex h-screen w-full flex-col items-center justify-center bg-slate-100">
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="./favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <section className="flex w-full flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl">
          <Part1 />
        </section>
      </main>
    </div>
  );
};

export default Home;

// type TechnologyCardProps = {
//   name: string;
//   description: string;
//   documentation: string;
// };

// const TechnologyCard: React.FC<TechnologyCardProps> = ({
//   name,
//   description,
//   documentation,
// }) => {
//   return (
//     <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
//       <h2 className="text-lg text-gray-700">{name}</h2>
//       <p className="text-sm text-gray-600">{description}</p>
//       <Link
//         className="m-auto mt-3 w-fit text-sm text-violet-500 underline decoration-dotted underline-offset-2"
//         href={documentation}
//         target="_blank"
//         rel="noreferrer"
//       >
//         Documentation
//       </Link>
//     </section>
//   );
// };
